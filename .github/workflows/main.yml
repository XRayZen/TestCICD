name: CI/CD

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  TF_VAR_environment: prod
  AWS_Role_ARN: secrets.IAM_ROLE_ARN
  REPO_ECR_NAME: test-cicd-repo

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        function:
          - hello
          - world
          # 他のLambda関数名を追加

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker images
      uses: docker/build-push-action@v2
      with:
        context: ./lambda/${{ matrix.function }}
        file: ./lambda/${{ matrix.function }}/Dockerfile
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.REPO_ECR_NAME }}:${{ matrix.function }}

  deploy_infrastructure:
    needs: build_and_push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      run: terraform init ./terraform/${{ env.TF_VAR_environment }}

    - name: Validate Terraform
      run: terraform validate ./terraform/${{ env.TF_VAR_environment }}

    - name: Plan Terraform
      run: terraform plan -out=tfplan ./terraform/${{ env.TF_VAR_environment }}

    - name: Apply Terraform
      run: terraform apply -auto-approve -input=false tfplan


